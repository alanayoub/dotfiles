{

  // "Interval for check extension update, could be daily, weekly, never",
  // "default": "daily", "enum": ["daily", "weekly", "never"]
  "coc.preferences.extensionUpdateCheck": "daily",

  // "Target to show hover information, default is floating window when possible."
  // "enum": ["preview", "echo", "float"]
  "coc.preferences.hoverTarget": "float",

  // "Enable preselect feature, only works on neovim",
  "suggest.enablePreselect": false,

  // "The character used in abbr of complete item to indicate the item could be expand as snippet."
  // "default": "~",
  "suggest.snippetIndicator": "<snip>",

  // "Not make vim select first item on completion start", "default": true
  "suggest.noselect": false,

  // "Diagnostic message target.", "default": "float"
  // "enum": ["echo", "float"]
  "diagnostic.messageTarget": "float",

  // "Use Ale for display diagnostics in vim, will disable coc for display diagnostics,
  // restart required on change.", "default": false
  "diagnostic.displayByAle": true,

  // "Enable signature help when trigger character typed
  // require restart service on change.", "default": true
  "signature.enable": true,

  // "Target of signature help, use float when possible by default
  // "enum": ["float", "echo"]
  "signature.target": "float",

  // Enable floating window for documentation when possible, default: `true`
  "suggest.floatEnable": true,

  // ------------------------------------------------- //
  //                                                   //
  // Extentions                                        //
  //                                                   //
  // ------------------------------------------------- //

  // (default: 1) - priority of fomatter
  // Change it to -1 if you don't want prettier to have higher priority than
  // formatter provided by other language server.
  "prettier.formatterPriority": 1,

  // (default: false) - JavaScript and TypeScript only
  // Use prettier-eslint instead of prettier. Other settings will only be fallbacks
  // in case they could not be inferred from ESLint rules.
  "prettier.eslintIntegration": false,

  // (default: false) - JavaScript and TypeScript only
  // Use prettier-tslint instead of prettier. Other settings will only be fallbacks
  // in case they could not be inferred from TSLint rules.
  "prettier.tslintIntegration": false,

  // (default: false) - CSS, SCSS and LESS only
  // Use prettier-stylelint instead of prettier. Other settings will only be fallbacks
  // in case they could not be inferred from stylelint rules.
  "prettier.stylelintIntegration": false,

  // (default: false)
  // Require a 'prettierconfig' to format
  "prettier.requireConfig": false,

  // (default: .prettierignore)
  // Supply the path to an ignore file such as .gitignore or .prettierignore.
  // Files which match will not be formatted. Set to null to not read ignore files.
  // Restart required.
  "prettier.ignorePath": ".prettierignore",

  // (default: ["vue"])
  // A list of languages IDs to disable this extension on. Restart required.
  // Note: Disabling a language enabled in a parent folder will prevent
  // formatting instead of letting any other formatter to run
  "prettier.disableLanguages": "vue",

  // (default: "Prettier")
  // Text of status item indicating current buffer can't be formatted by prettier.
  "prettier.statusItemText": "Prettier",

  // (default: false)
  // Only use the version of prettier installed by the client, ignoring the version
  // bundled with coc-prettier
  "prettier.onlyUseLocalVersion": false,

  // (default: false)
  // Disable the 'Formatted by prettier' message which is echoed every time a file is
  // successfully formatted
  "prettier.disableSuccessMessage": false,

  // Enable global g:coc_git_status, default: true.
  "git.enableGlobalStatus": true,

  // Start offset of sign gutter, change to higher value to prevent overwrite by other plugin., default: 99.
  "git.signOffset": 10,

  // Enable eslint
  "eslint.enable": true,

  // set to false to disable html language server.
	"html.enable": true,

  // set to false to disable json language server.
	"json.enable": true,


  "css.validate": true, // enables validation for css files, default true.

  // Enable tsserver extension, default: true
  "tsserver.enable": true,

  // Use tsserver for javascript files, default: true
  "tsserver.enableJavascript": true,

  // default true
  "tsserver.reportStyleChecksAsWarnings": true,

  // Enable experimentalDecorators for implicit project, default: false
  "tsserver.implicitProjectConfig.experimentalDecorators": true,

  // default: true
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,

  // default: false
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

  // Enable / disable suggestion diagnostics for TypeScript files in the editor. default: true
  "typescript.suggestionActions.enabled": false,

  // Enable/disable format for javascript files.
  "javascript.format.enabled": true

}
